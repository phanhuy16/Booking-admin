import { Alert, Box, Card, CardContent, Grid, Typography } from "@mui/material";
import {
  Edit,
  ListButton,
  SelectInput,
  ShowButton,
  SimpleForm,
  TopToolbar,
  useNotify,
  useRecordContext,
  useRedirect,
} from "react-admin";

const paymentStatusChoices = [
  { id: 0, name: "ƒêang ch·ªù" },
  { id: 1, name: "Ho√†n th√†nh" },
  { id: 2, name: "Th·∫•t b·∫°i" },
];

// Edit Actions
const EditActions = () => (
  <TopToolbar>
    <ShowButton />
    <ListButton />
  </TopToolbar>
);

// Payment Info Display
const PaymentInfoPanel = () => {
  const record = useRecordContext();
  if (!record) return null;

  const getMethodLabel = (method: number) => {
    switch (method) {
      case 0:
        return "Ti·ªÅn m·∫∑t";
      case 1:
        return "Th·∫ª t√≠n d·ª•ng";
      case 2:
        return "B·∫£o hi·ªÉm";
      case 3:
        return "Tr·ª±c tuy·∫øn";
      default:
        return "Kh√¥ng x√°c ƒë·ªãnh";
    }
  };

  return (
    <Card sx={{ mb: 3 }}>
      <CardContent>
        <Typography variant="h6" gutterBottom>
          Th√¥ng tin thanh to√°n hi·ªán t·∫°i
        </Typography>

        <Grid container spacing={2} sx={{ mt: 1 }}>
          <Grid size={{ xs: 12, md: 6 }}>
            <Typography variant="body2" color="textSecondary">
              M√£ thanh to√°n
            </Typography>
            <Typography variant="body1">#{record.id}</Typography>
          </Grid>

          <Grid size={{ xs: 12, md: 6 }}>
            <Typography variant="body2" color="textSecondary">
              Booking
            </Typography>
            <Typography variant="body1">#{record.bookingId}</Typography>
          </Grid>

          <Grid size={{ xs: 12, md: 6 }}>
            <Typography variant="body2" color="textSecondary">
              S·ªë ti·ªÅn
            </Typography>
            <Typography variant="h6" color="primary">
              {new Intl.NumberFormat("vi-VN", {
                style: "currency",
                currency: "VND",
              }).format(record.amount)}
            </Typography>
          </Grid>

          <Grid size={{ xs: 12, md: 6 }}>
            <Typography variant="body2" color="textSecondary">
              Ph∆∞∆°ng th·ª©c
            </Typography>
            <Typography variant="body1">
              {getMethodLabel(record.method)}
            </Typography>
          </Grid>

          <Grid size={{ xs: 12, md: 6 }}>
            <Typography variant="body2" color="textSecondary">
              Th·ªùi gian thanh to√°n
            </Typography>
            <Typography variant="body1">
              {new Date(record.paidAt).toLocaleString("vi-VN")}
            </Typography>
          </Grid>
        </Grid>
      </CardContent>
    </Card>
  );
};

export const PaymentEdit = () => {
  const notify = useNotify();
  const redirect = useRedirect();

  const onSuccess = (data: any) => {
    console.log("‚úÖ Update success, returned data:", data);
    notify("C·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n th√†nh c√¥ng", { type: "success" });
    redirect("show", "payments", data.id);
  };

  const onError = (error: any) => {
    console.error("‚ùå Update error:", error);
    notify("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n", { type: "error" });
  };

  const transform = (data: any) => {
    console.log("üì§ Sending data to API:", { status: data.status });
    // Only send status field to match PaymentUpdateDto
    return {
      status: data.status,
    };
  };

  return (
    <Edit
      mutationOptions={{ onSuccess, onError }}
      transform={transform}
      actions={<EditActions />}
      mutationMode="pessimistic"
    >
      <SimpleForm>
        <Box sx={{ width: "100%", maxWidth: 800 }}>
          <Typography variant="h5" gutterBottom>
            C·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n
          </Typography>

          <PaymentInfoPanel />

          <Alert severity="info" sx={{ mb: 3 }}>
            <Typography variant="body2">
              <strong>L∆∞u √Ω khi thay ƒë·ªïi tr·∫°ng th√°i:</strong>
            </Typography>
            <ul style={{ marginTop: 8, marginBottom: 0 }}>
              <li>
                <strong>Ho√†n th√†nh:</strong> Booking s·∫Ω t·ª± ƒë·ªông chuy·ªÉn sang
                tr·∫°ng th√°i "Completed"
              </li>
              <li>
                <strong>Th·∫•t b·∫°i:</strong> Booking s·∫Ω b·ªã h·ªßy v√† l·ªãch h·∫πn s·∫Ω ƒë∆∞·ª£c
                m·ªü l·∫°i
              </li>
              <li>H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông g·ª≠i th√¥ng b√°o cho b·ªánh nh√¢n</li>
            </ul>
          </Alert>

          <SelectInput
            source="status"
            label="Tr·∫°ng th√°i thanh to√°n"
            choices={paymentStatusChoices}
            fullWidth
            helperText="Ch·ªçn tr·∫°ng th√°i m·ªõi cho thanh to√°n"
          />

          <Box sx={{ mt: 3, p: 2, bgcolor: "warning.light", borderRadius: 1 }}>
            <Typography variant="body2">
              ‚ö†Ô∏è <strong>C·∫£nh b√°o:</strong> Vi·ªác thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n
              s·∫Ω ·∫£nh h∆∞·ªüng tr·ª±c ti·∫øp ƒë·∫øn tr·∫°ng th√°i c·ªßa booking v√† l·ªãch h·∫πn. Vui
              l√≤ng ki·ªÉm tra k·ªπ tr∆∞·ªõc khi l∆∞u.
            </Typography>
          </Box>
        </Box>
      </SimpleForm>
    </Edit>
  );
};
